<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:converters="clr-namespace:HealthyPeopleForFun.Converters"
					xmlns:local="clr-namespace:HealthyPeopleForFun.Resources"
					xmlns:taskbar="clr-namespace:Hardcodet.Wpf.TaskbarNotification;assembly=Hardcodet.NotifyIcon.Wpf">
	
	<converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
	<local:Strings x:Key="Strings" />
	
	<Style x:Key="RoundedCornersBorderStyle"
		   TargetType="Border">
		<Setter Property="Background"
				Value="#2b2b2b" />
		<Setter Property="BorderBrush"
				Value="#a0a0a0" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="CornerRadius"
				Value="10" />
		<Setter Property="Padding"
				Value="10,10,10,10" />
	</Style>
	
	<Style x:Key="MainWindowStyle"
		   TargetType="Window">
		<Setter Property="AllowsTransparency"
				Value="True" />
		<Setter Property="Background"
				Value="Transparent"/>
		<Setter Property="Height"
				Value="230" />
		<Setter Property="ResizeMode"
				Value="NoResize" />
		<Setter Property="ShowInTaskbar"
				Value="False" />
		<Setter Property="Topmost"
				Value="True" />
		<Setter Property="Visibility"
				Value="{Binding IsMainWindowVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
		<Setter Property="Width"
				Value="360" />
		<Setter Property="WindowStyle"
				Value="None" />
		<Style.Triggers>
			<Trigger Property="Visibility"
					 Value="Visible">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Opacity"
											 From="0.0"
											 To="1.0"
											 Duration="0:0:1"
											 AutoReverse="False" />
							<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
											 From="0.0"
											 To="1"
											 Duration="0:0:1"
											 AutoReverse="False">
								<DoubleAnimation.EasingFunction>
									<ElasticEase EasingMode="EaseOut"
												 Oscillations="1" />
								</DoubleAnimation.EasingFunction>
							</DoubleAnimation>
							<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
											 From="0.0"
											 To="1"
											 Duration="0:0:1"
											 AutoReverse="False">
								<DoubleAnimation.EasingFunction>
									<ElasticEase EasingMode="EaseOut"
												 Oscillations="1" />
								</DoubleAnimation.EasingFunction>
							</DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="GridButtonStyle"
		   TargetType="Grid">
		<Setter Property="Height"
				Value="25" />
		<Setter Property="Margin"
				Value="0,0,0,0" />
		<Setter Property="VerticalAlignment"
				Value="Bottom" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Background"
						Value="#626262" />
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="False">
				<Setter Property="Background"
						Value="#3f4042" />
			</Trigger>
		</Style.Triggers>
	</Style>
	
	<Style x:Key="ImageButtonStyle"
		   TargetType="Image">
		<Setter Property="Margin"
				Value="0,0,0,10" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Opacity"
						Value="1" />
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="False">
				<Setter Property="Opacity"
						Value="0.6" />
			</Trigger>
		</Style.Triggers>
	</Style>
	
	<Style x:Key="ContextMenuTextBlockStyle"
		   TargetType="TextBlock">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="#ffffff" />
		<Setter Property="Padding"
				Value="10 0 0 0" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Background"
						Value="#3f4042" />
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="False">
				<Setter Property="Background"
						Value="Transparent" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="BasicTextBlockStyle"
		   TargetType="TextBlock">
		<Setter Property="FontSize"
				Value="14" />
		<Setter Property="Foreground"
				Value="#ffffff" />
		<Setter Property="HorizontalAlignment"
				Value="Center" />
		<Setter Property="Margin"
				Value="0,2,0,0"></Setter>
	</Style>

	<Style x:Key="TimePartTextBlockStyle"
		   TargetType="TextBlock">
		<Setter Property="FontSize"
				Value="14" />
		<Setter Property="Foreground"
				Value="#acacac" />
		<Setter Property="Margin"
				Value="5,0,0,0"></Setter>
		<Setter Property="VerticalAlignment"
				Value="Center" />
	</Style>

	<Style x:Key="TimeValueTextBlockStyle"
		   TargetType="TextBlock">
		<Setter Property="FontSize"
				Value="35" />
		<Setter Property="Foreground"
				Value="#ffffff" />
		<Setter Property="HorizontalAlignment" 
				Value="Center"/>
		<Setter Property="Margin"
				Value="10,0,0,0"></Setter>
		<Setter Property="VerticalAlignment"
				Value="Center" />
	</Style>
	
	<ControlTemplate x:Key="ContextMenuControlTemplate">
		<Border Style="{StaticResource RoundedCornersBorderStyle}"
				Padding="0,0,0,0">
			<Grid Background="Transparent"
				  Height="80"
				  Width="100">
				<Grid.RowDefinitions>
					<RowDefinition></RowDefinition>
					<RowDefinition></RowDefinition>
					<RowDefinition></RowDefinition>
				</Grid.RowDefinitions>
				<Grid Background="Transparent"
					  Grid.Row="0"
					  Height="25"
					  VerticalAlignment="Center">
					<Grid.InputBindings>
						<MouseBinding Command="{Binding ShowWindowCommand}"
									  MouseAction="LeftClick" />
					</Grid.InputBindings>
					<TextBlock Style="{StaticResource ContextMenuTextBlockStyle}"
							   Text="{Binding Open, Source={StaticResource Strings}}">
					</TextBlock>
				</Grid>
				<Grid Background="Transparent"
					  Grid.Row="1"
					  Height="25"
					  VerticalAlignment="Center">
					<Grid.InputBindings>
						<MouseBinding Command="{Binding OpenSettingsCommand}"
									  MouseAction="LeftClick" />
					</Grid.InputBindings>
					<TextBlock Style="{StaticResource ContextMenuTextBlockStyle}"
							   Text="{Binding Settings, Source={StaticResource Strings}}">
					</TextBlock>
				</Grid>
				<Grid Background="Transparent"
					  Grid.Row="2"
					  Height="25"
					  VerticalAlignment="Center">
					<Grid.InputBindings>
						<MouseBinding Command="{Binding ExitCommand}"
									  MouseAction="LeftClick" />
					</Grid.InputBindings>
					<TextBlock Style="{StaticResource ContextMenuTextBlockStyle}"
							   Text="{Binding Exit, Source={StaticResource Strings}}">
					</TextBlock>
				</Grid>
			</Grid>
		</Border>
	</ControlTemplate>
	
	<Style x:Key="TaskbarIconStyle"
		   TargetType="taskbar:TaskbarIcon">
		<Setter Property="ContextMenu">
			<Setter.Value>
				<ContextMenu Template="{StaticResource ContextMenuControlTemplate}">
				</ContextMenu>
			</Setter.Value>
		</Setter>
		<Setter Property="IconSource"
				Value="../Assets/icon.ico" />
		<Setter Property="ToolTip"
				Value="{Binding Title, Source={StaticResource Strings}}" />
	</Style>

	<Style x:Key="SettingsTextBoxStyle"
		   TargetType="TextBox">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="FontSize"
				Value="14" />
		<Setter Property="Foreground"
				Value="#acacac" />
		<Setter Property="Height"
				Value="30" />
		<Setter Property="Margin"
				Value="10,0,10,0" />
		<Setter Property="Padding"
				Value="5,0,0,0" />
		<Setter Property="VerticalContentAlignment" 
				Value="Center" />
		<Setter Property="Width"
				Value="40" />
	</Style>

</ResourceDictionary>